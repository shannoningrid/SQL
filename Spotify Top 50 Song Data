# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table:

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then in inserted the Spotify Data .csv into the table.

#Next, I explored the data to answer the following questions:

#1. What is the average danceability of each artist from most to least danceable?

SELECT AVG(danceability), artist_name
FROM Spotifydata
GROUP BY artist_name
ORDER BY AVG(danceability) DESC;

#2.  Who are the top 10 artists based on popularity?

SELECT artist_name, popularity
FROM Spotifydata
ORDER BY popularity DESC LIMIT 10;

#3. What is the average energy of the 10 most popular songs?

SELECT AVG(energy) as mostpop_energy
FROM Spotifydata
WHERE popularity IN (
SELECT popularity FROM Spotifydata ORDER BY popularity DESC LIMIT 10);


#4. What is the average energy of the 10 least popular songs in the top 50?

SELECT AVG(energy) as leastpop_energy
FROM Spotifydata
WHERE popularity IN (
SELECT popularity FROM Spotifydata ORDER BY popularity ASC LIMIT 10);

#5. Which artist released the longest song? What is the title of the song? How long is it?

SELECT artist_name, track_name, duration_ms
FROM Spotifydata
ORDER BY duration_ms DESC LIMIT 1;
